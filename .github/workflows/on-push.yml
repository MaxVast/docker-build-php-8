name: deploy to ghcr.io
on:
  push:
    branches: [ 8.4 ]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BASE_IMAGE_NAME: 8.4
      ALPINE_VERSION: 3.20
      OWNER: '${{ github.repository_owner }}'
    steps:
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile-build
          push: true
          cache-from: type=registry,ref=${{ github.repository_owner }}/build-${{ env.BASE_IMAGE_NAME }}:latest
          cache-to: type=inline
          tags: ghcr.io/${{ env.OWNER_LC }}/build-${{ env.BASE_IMAGE_NAME }}:latest
          target: build
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Build and push prod-php-fpm
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile-fpm
          push: true
          cache-from: type=registry,ref=${{ github.repository_owner }}/prod-${{ env.BASE_IMAGE_NAME }}-fpm:latest
          cache-to: type=inline
          tags: ghcr.io/${{ env.OWNER_LC }}/prod-${{ env.BASE_IMAGE_NAME }}-fpm:latest
          target: prod
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Build and push dev-php-fpm
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile-fpm
          push: true
          cache-from: type=registry,ref=${{ github.repository_owner }}/dev-${{ env.BASE_IMAGE_NAME }}-fpm:latest
          cache-to: type=inline
          tags: ghcr.io/${{ env.OWNER_LC }}/dev-${{ env.BASE_IMAGE_NAME }}-fpm:latest
          target: dev
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      # SQLSRV version
      - name: Build and push build-sqlsrv
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile-build
          push: true
          cache-from: type=registry,ref=${{ github.repository_owner }}/build-${{ env.BASE_IMAGE_NAME }}-sqlsrv:latest
          cache-to: type=inline
          tags: ghcr.io/${{ env.OWNER_LC }}/build-${{ env.BASE_IMAGE_NAME }}-sqlsrv:latest
          target: build-sqlsrv
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Build and push prod-php-fpm-sqlsrv
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile-fpm
          push: true
          cache-from: type=registry,ref=${{ github.repository_owner }}/prod-${{ env.BASE_IMAGE_NAME }}-fpm-sqlsrv:latest
          cache-to: type=inline
          tags: ghcr.io/${{ env.OWNER_LC }}/prod-${{ env.BASE_IMAGE_NAME }}-fpm-sqlsrv:latest
          target: prod-sqlsrv
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Build and push dev-php-fpm-sqlsrv
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile-fpm
          push: true
          cache-from: type=registry,ref=${{ github.repository_owner }}/dev-${{ env.BASE_IMAGE_NAME }}-fpm-sqlsrv:latest
          cache-to: type=inline
          tags: ghcr.io/${{ env.OWNER_LC }}/dev-${{ env.BASE_IMAGE_NAME }}-fpm-sqlsrv:latest
          target: dev-sqlsrv
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
